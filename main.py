import discord
from discord.ext import commands
from flask import Flask, request
from threading import Thread
import os
import json
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î token ‡πÅ‡∏•‡∏∞ channel ‡∏à‡∏≤‡∏Å .env
load_dotenv()
TOKEN = os.getenv("TOKEN")
CHANNEL_ID = 1394115507883606026
ADMIN_ONLY_CHANNEL_ID = 1394133334317203476
TREATMENT_CHANNEL_ID = 1394115507883606026


# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Discord Bot
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á Discord
def send_to_discord(data):
    channel = bot.get_channel(CHANNEL_ID)
    if not channel:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Discord Channel")
        return

    treatments = []
    for t in data.get("trt", []):
        name = t.get("name", "").strip()
        amount = t.get("amount", "")
        therapist = t.get("therapist", "").strip()
        if name:
            treatments.append(f"- {name} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡πÄ‡∏ó‡∏≠‡∏£‡∏≤‡∏õ‡∏¥‡∏™‡∏ï‡πå: {therapist}")

    equipment_lines = []
    for eq in data.get("equipment", []):
        eq_name = eq.get("name", "").strip()
        eq_qty = eq.get("qty", 1)
        if eq_name:
            equipment_lines.append(f"- {eq_name} ({eq_qty})")

    if not treatments and not equipment_lines:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TRT ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
        return

    msg = (
        f"üíÜ‚Äç‚ôÄÔ∏è **‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ó‡∏£‡∏µ‡∏ï‡πÄ‡∏°‡∏ô‡∏ï‡πå (TRT)**\n"
        f"üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {data.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '-')}\n"
        f"üßæ M-JOB: {data.get('‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏öM', '-')}\n"
        f"üë©‚Äçü¶∞ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: {data.get('‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤', '-')}\n"
    )

    if treatments:
        msg += "üìÑ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ TRT:\n" + "\n".join(treatments) + "\n"
    if equipment_lines:
        msg += "üîß ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:\n" + "\n".join(equipment_lines)

    if msg.strip():
        bot.loop.create_task(channel.send(msg))
    else:
        print("‚ùå ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏á ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á Discord")

# Flask App
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is online"

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì• ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö webhook:\n", json.dumps(data, ensure_ascii=False, indent=2))
    if data:
        send_to_discord(data)
        return "‚úÖ Received", 200
    return "‚ùå No data", 400

# Keep alive
def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

@bot.event
async def on_ready():
    print(f"‚úÖ Bot {bot.user} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")

keep_alive()
bot.run(TOKEN)
